{ inputs, pkgs, lib, config, ... }:

let
  cfg = config.pentesting;
  web = cfg.webapp;
  net = cfg.networking;
in {
  options = {
    pentesting = {
      enable = lib.mkEnableOption "pentesting tools";

      metasploit.enable = lib.mkEnableOption "Metasploit framework";

      webapp = {
        enable = lib.mkEnableOption "Web App suite";

        zap.enable = lib.mkOption {
          description = "Whether to enable OWASP ZAP proxy";
          type = lib.types.bool;
          default = true;
        };

        nuclei.enable = lib.mkOption {
          description = "Whether to enable Nuclei web vulnerability scanner";
          type = lib.types.bool;
          default = true;
        };

        feroxbuster.enable = lib.mkOption {
          description = "Whether to enable Feroxbuster";
          type = lib.types.bool;
          default = true;
        };
      };
    };
  };

  config = lib.mkIf cfg.enable {
    home.packages = 
      lib.lists.optionals cfg.metasploit.enable [ pkgs.metasploit ] ++
      lib.lists.optionals cfg.webapp.enable (
        lib.lists.optionals web.zap.enable [ pkgs.zap ] ++
        lib.lists.optionals web.nuclei.enable [ pkgs.nuclei ] ++
        lib.lists.optionals web.feroxbuster.enable [ pkgs.feroxbuster ]
      );
  };
}
